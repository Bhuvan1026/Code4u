class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        n=len(s)
        left=0
        charset=set()
        left=0
        maxi=0
        for right in range(n):
            if s[right] not in charset:
                charset.add(s[right])
                maxi=max(maxi,right-left+1)
            else:
                while s[right] in charset:
                    charset.remove(s[left])
                    left+=1
                charset.add(s[right])
        return maxi
      
      
      
      
      
      
      
      
      
      
      
        # max=0
        # count=0
        
        # if len(s)==1:
        #     return 1
        # if len(s)==0:
        #     return 0
        # for i in range(len(s)-1):
        #     for j in range(i+1,len(s)+1):
        #         if len(s[i:j])==len(set(s[i:j])) and max<len(set(s[i:j])):
        #             max=len(set(s[i:j]))
        # return max

