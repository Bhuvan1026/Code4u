# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    
    def inorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        # def inorder(root,x):
        #     if root==None:
        #         return 
        #     inorder(root.left,x)
        #     x.append(root.val)
        #     inorder(root.right,x)
        # x=[]
        # inorder(root,x)
        # return x

        #moris Traversal
        curr=root
        inorder=[]
        while(curr!=None):
            if curr.left==None:
                inorder.append(curr.val)
                curr=curr.right
            else:
                #make a link
                prev=curr.left
                while(prev.right!=None and prev.right!=curr):
                    prev=prev.right
                if prev.right==None:
                    prev.right=curr
                    curr=curr.left
                else:
                    prev.right=None
                    inorder.append(curr.val)
                    curr=curr.right
        return inorder
    

        
